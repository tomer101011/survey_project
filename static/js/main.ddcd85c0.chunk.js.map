{"version":3,"sources":["pictures/surveyPic.jpg","constants/routes.js","components/LoginPage.js","components/UserPage.js","components/UserInfo.js","components/AllSurveysPage.js","components/SurveyPage.js","components/CouponPage.js","components/AdminPage.js","components/NewCategory.js","classes/classes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","USER","ADMIN","ALLSURVEYS","SURVEYPAGE","LoginPage","props","setUserName","e","setState","userName","target","value","setPassword","password","redirectToUserPage","state","isLoggedIn","to","path","areInputsBlank","someAreBlank","document","getElementById","style","border","login","foundUserIndex","findUser","whereToGo","users","role","ROUTES","localStorage","setItem","alert","usersArr","i","length","user","className","this","id","onClick","title","src","require","alt","onChange","type","placeholder","Component","UserPage","doRedirect","changePage","changePathToGo","newPath","goToAvailableCompletedSurveys","loggedUserIndex","getItem","textAlign","firstName","lastName","paddingBottom","UserInfo","done","setFirstName","setLastName","setMail","mail","updateUser","window","defaultValue","AllSurveysPage","loadCategories","searchSurveyByCategory","categories","map","categ","key","inputCategory","category","changeHeader","showSurvey","indexOfSurvey","pushNewLinkToSurveysArr","surveysArr","surveyIndex","push","surveys","name","loadSurveys","findSurveyIdInCompletedArr","survey","SurveyPage","addClearGoBackButtons","clearSurvey","addSubmitButton","submitSurvey","width","resultSurvey","someQuestionsNotFilled","questions","foundCheckedAns","j","answers","checked","pushCompletedSurvey","addRadioButton","indexQue","indexAns","completedArrayIndex","completedSurveys","disabled","loadSurvey","questionsArr","answersArr","marginLeft","float","question","ans","Number","que","CouponPage","loadCoupons","couponsArr","couponRedeemed","redeemCoupon","innerHTML","backgroundColor","color","coupon","AdminPage","NewCategory","newCategory","addNewCategory","setCategoryName","User","Survey","Question","App","tempUsers","checkedSurvey","indexSurvey","surveyId","tempCategories","exact","render","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddcd85c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/surveyPic.05bf9d9d.jpg\";","export const LOGIN = '/';\r\nexport const USER = '/user';\r\nexport const ADMIN = '/admin';\r\nexport const SURVEYS = '/surveys';\r\nexport const COUPONPAGE = '/couponPage';\r\nexport const USER_INFO = '/userInfo';\r\nexport const ALLSURVEYS = '/allSurveys';\r\nexport const SURVEYPAGE = '/surveyPage';\r\nexport const NEW_CATEGORY = '/newCategory';\r\n\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class LoginPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            path: \"\",\r\n            isLoggedIn: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.redirectToUserPage()}\r\n                <div id=\"box\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"new-display-4\">Login Page</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <img onClick={() => this.login()} className=\"img-style\" title=\"Login\" src={require(`../pictures/surveyPic.jpg`)} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-top\">\r\n                            <div className=\"col-12\">\r\n                                <input id=\"userName\" onChange={this.setUserName} className=\"inputStyle\" type=\"text\" placeholder=\"User Name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <input id=\"password\" onChange={this.setPassword} className=\"inputStyle\" type=\"password\" placeholder=\"Password\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-bottom\">\r\n                            <div className=\"col-12\">\r\n                                <button onClick={() => this.login()} className=\"btn btn-success buttonStyleWidth\">Login</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setUserName = (e) => {\r\n        this.setState({ userName: e.target.value });\r\n    }\r\n\r\n    setPassword = (e) => {\r\n        this.setState({ password: e.target.value });\r\n    }\r\n\r\n    redirectToUserPage = () => {\r\n        if (this.state.isLoggedIn)\r\n            return <Redirect to={this.state.path} />\r\n    }\r\n\r\n    areInputsBlank = () => {\r\n        let someAreBlank = false;\r\n\r\n        if (this.state.userName === '') {\r\n            document.getElementById(\"userName\").style.border = \"2px solid red\";\r\n            someAreBlank = true;\r\n        }\r\n        else\r\n            document.getElementById(\"userName\").style.border = \"none\";\r\n\r\n        if (this.state.password === '') {\r\n            document.getElementById(\"password\").style.border = \"2px solid red\";\r\n            someAreBlank = true;\r\n        }\r\n        else\r\n            document.getElementById(\"password\").style.border = \"none\";\r\n\r\n        return someAreBlank;\r\n    }\r\n\r\n    login = () => {\r\n        if (!this.areInputsBlank()) {\r\n            let foundUserIndex = this.findUser();\r\n            let whereToGo = '';\r\n            if (foundUserIndex !== -1) {\r\n                if (this.props.users[foundUserIndex].role === 'User')\r\n                    whereToGo = ROUTES.USER;\r\n                else\r\n                    whereToGo = ROUTES.ADMIN;\r\n\r\n                localStorage.setItem('loggedUserIndex', foundUserIndex);\r\n                this.setState({ path: whereToGo, isLoggedIn: true });\r\n            }\r\n            else\r\n                alert('User name or password are incorrect');\r\n        }\r\n\r\n    }\r\n    findUser = () => {\r\n        let usersArr = this.props.users;\r\n        for (let i = 0; i < usersArr.length; i++) {\r\n            if (this.state.userName === usersArr[i].user && this.state.password === usersArr[i].password)\r\n                return i;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class UserPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedUserIndex: localStorage.getItem('loggedUserIndex'),\r\n            path: \"\",\r\n            changePage: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.doRedirect()}\r\n                <div id=\"box\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div style={{ textAlign: \"left\" }} className=\"col-6\">\r\n                                <button id=\"disc-style\" className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.LOGIN)}>Disconnect</button>\r\n                            </div>\r\n                            <div style={{ textAlign: \"right\" }} className=\"col-6\">\r\n                                <h1 className=\"header-style style-role\">{this.props.users[this.state.loggedUserIndex].role}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"new-display-4\">Welcome {this.props.users[this.state.loggedUserIndex].firstName} {this.props.users[this.state.loggedUserIndex].lastName}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"header-style\">What would you like to do:</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3 className=\"sub-header\">Surveys</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => this.goToAvailableCompletedSurveys('available')}>Available Surveys</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => this.goToAvailableCompletedSurveys('completed')}>Completed Surveys</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.COUPONPAGE)}>Coupons awards</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3 className=\"sub-header\">User Info</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div style={{ paddingBottom: \"10px\" }} className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.USER_INFO)}>Edit User Info</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    doRedirect = () => {\r\n        if (this.state.changePage)\r\n            return <Redirect to={this.state.path} />\r\n    }\r\n\r\n    changePathToGo = (newPath) => {\r\n        this.setState({ path: newPath, changePage: true });\r\n    }\r\n\r\n    goToAvailableCompletedSurveys = (whereToGo) => {\r\n        if (whereToGo === 'available')\r\n            localStorage.setItem('whereToGo', 'available');\r\n        else\r\n            localStorage.setItem('whereToGo', 'completed');\r\n\r\n        this.changePathToGo(ROUTES.ALLSURVEYS);\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class UserInfo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: this.props.users[window.localStorage.getItem(\"loggedUserIndex\")].user,\r\n            firstName: this.props.users[window.localStorage.getItem(\"loggedUserIndex\")].firstName,\r\n            lastName: this.props.users[window.localStorage.getItem(\"loggedUserIndex\")].lastName,\r\n            mail: this.props.users[window.localStorage.getItem(\"loggedUserIndex\")].mail,\r\n            loggedUserIndex: window.localStorage.getItem(\"loggedUserIndex\"),\r\n            done: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.redirectToUserPage()}\r\n                <div id=\"box\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div style={{ textAlign: \"left\" }} className=\"col-12\">\r\n                                <button id=\"disc-style\" className=\"link-style\" onClick={() => this.setState({ done: true })}>Go Back</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"new-display-4\">Edit User Info</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-top\">\r\n                            <div className=\"col-12\">\r\n                                <input id=\"userName\" onChange={this.setUserName} defaultValue={this.state.userName} className=\"inputStyle\" type=\"text\" placeholder=\"User Name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-top\">\r\n                            <div className=\"col-12\">\r\n                                <input id=\"firstName\" onChange={this.setFirstName} defaultValue={this.state.firstName} className=\"inputStyle\" type=\"text\" placeholder=\"First Name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-top\">\r\n                            <div className=\"col-12\">\r\n                                <input id=\"lastName\" onChange={this.setLastName} defaultValue={this.state.lastName} className=\"inputStyle\" type=\"text\" placeholder=\"Last Name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <input id=\"mail\" onChange={this.setMail} defaultValue={this.state.mail} className=\"inputStyle\" type=\"text\" placeholder=\"Mail\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-bottom\">\r\n                            <div className=\"col-12\">\r\n                                <button onClick={() => this.updateUser()} className=\"btn btn-info buttonStyleWidth\">Update Your Info</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    redirectToUserPage = () => {\r\n        if (this.state.done)\r\n            return <Redirect to={ROUTES.USER} />\r\n    }\r\n\r\n    setUserName = (e) => {\r\n        this.setState({ userName: e.target.value });\r\n    }\r\n\r\n    setFirstName = (e) => {\r\n        this.setState({ firstName: e.target.value });\r\n    }\r\n\r\n    setLastName = (e) => {\r\n        this.setState({ lastName: e.target.value });\r\n    }\r\n\r\n    setMail = (e) => {\r\n        this.setState({ mail: e.target.value });\r\n    }\r\n\r\n    areInputsBlank = () => {\r\n        let someAreBlank = false;\r\n\r\n        if (this.state.userName === '') {\r\n            document.getElementById(\"userName\").style.border = \"2px solid red\";\r\n            someAreBlank = true;\r\n        }\r\n        else\r\n            document.getElementById(\"userName\").style.border = \"none\";\r\n\r\n        if (this.state.firstName === '') {\r\n            document.getElementById(\"firstName\").style.border = \"2px solid red\";\r\n            someAreBlank = true;\r\n        }\r\n        else\r\n            document.getElementById(\"firstName\").style.border = \"none\";\r\n\r\n        if (this.state.lastName === '') {\r\n            document.getElementById(\"lastName\").style.border = \"2px solid red\";\r\n            someAreBlank = true;\r\n        }\r\n        else\r\n            document.getElementById(\"lastName\").style.border = \"none\";\r\n\r\n        if (this.state.mail === '') {\r\n            document.getElementById(\"mail\").style.border = \"2px solid red\";\r\n            someAreBlank = true;\r\n        }\r\n        else\r\n            document.getElementById(\"mail\").style.border = \"none\";\r\n\r\n        return someAreBlank;\r\n    }\r\n\r\n    updateUser = () => {\r\n        if (!this.areInputsBlank()) {\r\n            this.props.updateUser(this.state.userName, this.state.firstName, this.state.lastName, this.state.mail);\r\n            alert(\"User info changed successfully!\");\r\n            this.setState({ done: true });\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class AllSurveysPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: \"All Categories\",\r\n            path: \"\",\r\n            changePage: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.doRedirect()}\r\n                <div id=\"box\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div style={{ textAlign: \"left\" }} className=\"col-6\">\r\n                                <button id=\"disc-style\" className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.USER)}>Go Back</button>\r\n                            </div>\r\n                            <div style={{ textAlign: \"right\" }} className=\"col-6\">\r\n                                {this.loadCategories()}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {this.changeHeader()}\r\n                            </div>\r\n                        </div>\r\n                        {this.loadSurveys(this.state.category).map(survey => { return survey })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadCategories = () => {\r\n        return (\r\n            <select id=\"category\" onChange={() => this.searchSurveyByCategory()}>\r\n                <option >All Categories</option>\r\n                {this.props.categories.map((categ, i) => { return <option key={i}>{categ}</option> })}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    searchSurveyByCategory = () => {\r\n        let inputCategory = document.getElementById(\"category\").value;\r\n        this.setState({ category: inputCategory });\r\n    }\r\n\r\n    changePathToGo = (newPath) => {\r\n        this.setState({ path: newPath, changePage: true });\r\n    }\r\n\r\n    doRedirect = () => {\r\n        if (this.state.changePage)\r\n            return <Redirect to={this.state.path} />\r\n    }\r\n\r\n    changeHeader = () => {\r\n        if (localStorage.getItem('whereToGo') === 'available')\r\n            return (<h1 className=\"new-display-4\">Available Surveys</h1>);\r\n\r\n        return (<h1 className=\"new-display-4\">Completed Surveys</h1>);\r\n    }\r\n\r\n    showSurvey = (indexOfSurvey) => {\r\n        localStorage.setItem('indexOfSurvey', indexOfSurvey);\r\n        this.changePathToGo(ROUTES.SURVEYPAGE);\r\n    }\r\n\r\n    pushNewLinkToSurveysArr = (surveysArr, surveyIndex) => {\r\n        surveysArr.push(\r\n            <div key={surveyIndex} className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <button onClick={() => this.showSurvey(surveyIndex)} className=\"link-style\" >{this.props.surveys[surveyIndex].name}</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loadSurveys = (category) => {\r\n        let surveysArr = [];\r\n        let whereToLoad = localStorage.getItem('whereToGo');\r\n        if (whereToLoad === 'available') {\r\n            for (let i = 0; i < this.props.surveys.length; i++) {\r\n                if (this.props.findSurveyIdInCompletedArr(this.props.surveys[i].id) === -1) {\r\n                    if (category === 'All Categories')\r\n                        this.pushNewLinkToSurveysArr(surveysArr, i);\r\n\r\n                    else if (this.props.surveys[i].category === category)\r\n                        this.pushNewLinkToSurveysArr(surveysArr, i);\r\n\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < this.props.surveys.length; i++) {\r\n                if (this.props.findSurveyIdInCompletedArr(this.props.surveys[i].id) !== -1) {\r\n                    if (category === 'All Categories')\r\n                        this.pushNewLinkToSurveysArr(surveysArr, i);\r\n\r\n                    else if (this.props.surveys[i].category === category)\r\n                        this.pushNewLinkToSurveysArr(surveysArr, i);\r\n\r\n                }\r\n            }\r\n        }\r\n        return surveysArr;\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class SurveyPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            indexOfSurvey: Number(localStorage.getItem('indexOfSurvey')),\r\n            loggedUserIndex: Number(localStorage.getItem('loggedUserIndex')),\r\n            path: \"\",\r\n            changePage: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.doRedirect()}\r\n                <div id=\"boxSurvey\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        {this.addClearGoBackButtons()}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"new-display-4\">{this.props.surveys[this.state.indexOfSurvey].name}</h1>\r\n                            </div>\r\n                        </div>\r\n                        {this.loadSurvey().map(que => { return que })}\r\n                        {this.addSubmitButton()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    addClearGoBackButtons = () => {\r\n        if (localStorage.getItem('whereToGo') === 'available')\r\n            return (\r\n                <div className=\"row\">\r\n                    <div style={{ textAlign: \"left\" }} className=\"col-6\">\r\n                        <button id=\"disc-style\" className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.ALLSURVEYS)}>Go Back</button>\r\n                    </div>\r\n                    <div style={{ textAlign: \"right\" }} className=\"col-6\">\r\n                        <button id=\"disc-style\" className=\"link-style\" onClick={() => this.clearSurvey()}>Clear Survey</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        else {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div style={{ textAlign: \"left\" }} className=\"col-12\">\r\n                        <button id=\"disc-style\" className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.ALLSURVEYS)}>Go Back</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    addSubmitButton = () => {\r\n        if (localStorage.getItem('whereToGo') === 'available')\r\n            return (\r\n                <div className=\"row margin-bottom\">\r\n                    <div className=\"col-12\">\r\n                        <button onClick={() => this.submitSurvey()} style={{ width: \"15%\" }} className=\"btn btn-info\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n\r\n    submitSurvey = () => {\r\n        let resultSurvey = [];\r\n        let someQuestionsNotFilled = false;\r\n        for (let i = 0; i < this.props.surveys[this.state.indexOfSurvey].questions.length && !someQuestionsNotFilled; i++) {\r\n            let foundCheckedAns = false;\r\n            for (let j = 0; j < this.props.surveys[this.state.indexOfSurvey].questions[i].answers.length && !foundCheckedAns; j++) {\r\n                if (document.getElementById('a' + i + j).checked) {\r\n                    resultSurvey.push(j);\r\n                    foundCheckedAns = true;\r\n                }\r\n            }\r\n            if (!foundCheckedAns) {\r\n                alert('Some of the questions were not filled');\r\n                someQuestionsNotFilled = true;\r\n            }\r\n        }\r\n        if (!someQuestionsNotFilled) {\r\n            this.props.pushCompletedSurvey(resultSurvey, this.state.loggedUserIndex, this.state.indexOfSurvey);\r\n            alert('Thank you for filling the survey!');\r\n            this.changePathToGo(ROUTES.ALLSURVEYS);\r\n        }\r\n    }\r\n\r\n    clearSurvey = () => {\r\n        for (let i = 0; i < this.props.surveys[this.state.indexOfSurvey].questions.length; i++)\r\n            for (let j = 0; j < this.props.surveys[this.state.indexOfSurvey].questions[i].answers.length; j++)\r\n                document.getElementById(\"a\" + i + j).checked = false;\r\n    }\r\n\r\n    changePathToGo = (newPath) => {\r\n        this.setState({ path: newPath, changePage: true });\r\n    }\r\n\r\n    doRedirect = () => {\r\n        if (this.state.changePage)\r\n            return <Redirect to={this.state.path} />\r\n    }\r\n\r\n    addRadioButton = (indexQue, indexAns) => {\r\n        let isSurveyCompletedType = localStorage.getItem('whereToGo');\r\n        if (isSurveyCompletedType === 'completed') {\r\n            let completedArrayIndex = this.props.findSurveyIdInCompletedArr(this.state.indexOfSurvey);\r\n            if (this.props.users[this.state.loggedUserIndex].completedSurveys[completedArrayIndex].resultSurvey[indexQue] === indexAns)\r\n                return (<input type=\"radio\" checked disabled name={\"a\" + indexQue} id={\"a\" + indexQue + indexAns} />);\r\n\r\n            else return (<input type=\"radio\" disabled name={\"a\" + indexQue} id={\"a\" + indexQue + indexAns} />);\r\n\r\n        }\r\n        else {\r\n            return (<input type=\"radio\" name={\"a\" + indexQue} id={\"a\" + indexQue + indexAns} />);\r\n        }\r\n    }\r\n\r\n    loadSurvey = () => {\r\n        let questionsArr = [];\r\n        for (let i = 0; i < this.props.surveys[this.state.indexOfSurvey].questions.length; i++) {\r\n            let answersArr = [];\r\n            for (let j = 0; j < this.props.surveys[this.state.indexOfSurvey].questions[i].answers.length; j++) {\r\n                answersArr.push(\r\n                    <div key={j} className=\"row\">\r\n                        <div style={{ marginLeft: \"480px\" }} className=\"col-12\">\r\n                            <table style={{ float: \"left\" }}  >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"padding-table\">\r\n                                            {this.addRadioButton(i, j)}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <table style={{ float: \"center\" }} >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <h4 className=\"autoBr\">{this.props.surveys[this.state.indexOfSurvey].questions[i].answers[j]}</h4>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            questionsArr.push(\r\n                <div key={i}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"sub-header autoBr\">{this.props.surveys[this.state.indexOfSurvey].questions[i].question}</h3>\r\n                        </div>\r\n                    </div>\r\n                    {answersArr.map(ans => { return ans })}\r\n                </div>\r\n            );\r\n        }\r\n        return questionsArr;\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class CouponPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            path: \"\",\r\n            changePage: false,\r\n            loggedUserIndex: localStorage.getItem('loggedUserIndex')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.doRedirect()}\r\n                <div id=\"box\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div style={{ textAlign: \"left\" }} className=\"col-12\">\r\n                                <button id=\"disc-style\" className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.USER)}>Go Back</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"new-display-4\">Coupon Awards</h1>\r\n                            </div>\r\n                        </div>\r\n                        {this.loadCoupons().map(coupon => { return coupon })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadCoupons = () => {\r\n        let couponsArr = [];\r\n        for (let i = 0; i < this.props.users[this.state.loggedUserIndex].completedSurveys.length; i++) {\r\n            if (this.props.users[this.state.loggedUserIndex].completedSurveys[i].couponRedeemed) {\r\n                couponsArr.push(\r\n                    <div key={i} className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <button id=\"style-disabled\" className=\"coupon-style\" disabled >Survey {this.props.users[this.state.loggedUserIndex].completedSurveys[i].indexOfSurvey + 1} Redeemed !</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else {\r\n                couponsArr.push(\r\n                    <div key={i} className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <button className=\"coupon-style\" id={'a' + i} onClick={() => this.redeemCoupon(i)}>Redeem Coupon Survey {this.props.users[this.state.loggedUserIndex].completedSurveys[i].indexOfSurvey + 1}</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return couponsArr;\r\n    }\r\n\r\n    redeemCoupon = (i) => {\r\n        this.props.users[this.state.loggedUserIndex].completedSurveys[i].couponRedeemed = true;\r\n        document.getElementById('a' + i).disabled = true;\r\n        document.getElementById('a' + i).innerHTML = \"Survey \" + (this.props.users[this.state.loggedUserIndex].completedSurveys[i].indexOfSurvey + 1) + \" redeemed !\"\r\n        document.getElementById('a' + i).style.backgroundColor = \"#4ca454\";\r\n        document.getElementById('a' + i).style.color = \"white\";\r\n    }\r\n\r\n    changePathToGo = (newPath) => {\r\n        this.setState({ path: newPath, changePage: true });\r\n    }\r\n\r\n    doRedirect = () => {\r\n        if (this.state.changePage)\r\n            return <Redirect to={this.state.path} />\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class AdminPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedUserIndex: localStorage.getItem('loggedUserIndex'),\r\n            path: \"\",\r\n            changePage: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.doRedirect()}\r\n                <div id=\"box\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div style={{ textAlign: \"left\" }} className=\"col-6\">\r\n                                <button id=\"disc-style\" className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.LOGIN)}>Disconnect</button>\r\n                            </div>\r\n                            <div style={{ textAlign: \"right\" }} className=\"col-6\">\r\n                                <h1 className=\"header-style style-role\">{this.props.users[this.state.loggedUserIndex].role}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"new-display-4\">Welcome {this.props.users[this.state.loggedUserIndex].firstName} {this.props.users[this.state.loggedUserIndex].lastName}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"header-style\">What would you like to do:</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3 className=\"sub-header\">Surveys</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => 1}>Create New Survey</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => 2}>Edit Survey</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => 3}>Delete Survey</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3 className=\"sub-header\">Users</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div style={{ paddingBottom: \"10px\" }} className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => 4}>Edit Users</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h3 className=\"sub-header\">Categories</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div style={{ paddingBottom: \"10px\" }} className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.NEW_CATEGORY)}>Add New Category</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div style={{ paddingBottom: \"10px\" }} className=\"col-12\">\r\n                                <button className=\"link-style\" onClick={() => 6}>All Categories</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    doRedirect = () => {\r\n        if (this.state.changePage)\r\n            return <Redirect to={this.state.path} />\r\n    }\r\n\r\n    changePathToGo = (newPath) => {\r\n        this.setState({ path: newPath, changePage: true });\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport *  as ROUTES from '../constants/routes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class NewCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newCategory: '',\r\n            path: \"\",\r\n            changePage: false\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.doRedirect()}\r\n                <div id=\"box\" className=\"row loginSheet\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div style={{ textAlign: \"left\" }} className=\"col-12\">\r\n                                <button id=\"disc-style\" className=\"link-style\" onClick={() => this.changePathToGo(ROUTES.ADMIN)}>Go Back</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h1 className=\"new-display-4\">Add New Category</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-top\">\r\n                            <div className=\"col-12\">\r\n                                <input id=\"categoryName\" style={{ width: \"50%\" }} onChange={this.setCategoryName} className=\"inputStyle\" type=\"text\" placeholder=\"Category Name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-bottom\">\r\n                            <div className=\"col-12\">\r\n                                <button style={{ width: \"50%\" }} onClick={() => this.addNewCategory()} className=\"btn btn-info buttonStyleWidth aaa\">Add New Category</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    areInputsBlank = () => {\r\n        let someAreBlank = false;\r\n\r\n        if (this.state.newCategory === '') {\r\n            document.getElementById(\"categoryName\").style.border = \"2px solid red\";\r\n            someAreBlank = true;\r\n        }\r\n        else\r\n            document.getElementById(\"categoryName\").style.border = \"none\";\r\n\r\n        return someAreBlank;\r\n    }\r\n\r\n    addNewCategory = () => {\r\n        if (!this.areInputsBlank()) {\r\n            this.props.addNewCategory(this.state.newCategory);\r\n            alert(\"New Category added!\");\r\n            this.changePathToGo(ROUTES.ADMIN);\r\n        }\r\n    }\r\n\r\n    setCategoryName = (e) => {\r\n        this.setState({ newCategory: e.target.value });\r\n    }\r\n\r\n    doRedirect = () => {\r\n        if (this.state.changePage)\r\n            return <Redirect to={this.state.path} />\r\n    }\r\n\r\n    changePathToGo = (newPath) => {\r\n        this.setState({ path: newPath, changePage: true });\r\n    }\r\n}\r\n","export class User {\r\n    user;\r\n    firstName;\r\n    lastName;\r\n    password;\r\n    mail;\r\n    role;\r\n    completedSurveys = []; // Ids of completed surveys\r\n\r\n    constructor(user, firstName, lastName, password, mail, role) {\r\n        this.user = user;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.password = password;\r\n        this.mail = mail;\r\n        this.role = role;\r\n    }\r\n}\r\n\r\nexport class Survey {\r\n    id;\r\n    name;\r\n    category;\r\n    questions = [];\r\n\r\n    constructor(id, name, category, questions) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.category = category;\r\n        this.questions = questions;\r\n    }\r\n}\r\n\r\nexport class Question {\r\n    question;\r\n    answers = [];\r\n\r\n    constructor(question, answers) {\r\n        this.question = question;\r\n        this.answers = answers;\r\n    }\r\n}","import React, { Component } from 'react'\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport UserPage from './components/UserPage';\nimport UserInfo from './components/UserInfo';\nimport AllSurveysPage from './components/AllSurveysPage';\nimport SurveyPage from './components/SurveyPage';\nimport CouponPage from './components/CouponPage';\nimport AdminPage from './components/AdminPage';\nimport NewCategory from './components/NewCategory';\nimport './cssFiles/loginPage.css';\nimport './cssFiles/userPage.css';\nimport './cssFiles/surveyPage.css';\nimport *  as ROUTES from './constants/routes';\nimport { User, Survey, Question } from './classes/classes.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: [\n        new User('tomer', 'Tomer', 'Steiner', '1234', 'aaaa@gmail.com', 'User'),\n        new User('ram', 'Ram', 'Maian', '4321', 'bbbb@walla.com', 'User'),\n        new User('jon', 'Jon', 'Snow', '1111', 'cccc@gmail.com', 'Admin')\n      ],\n\n      surveys: [\n        new Survey(0, 'bla bla', 'Bedroom',\n          [new Question('are this better?', ['one', 'two', 'three']),\n          new Question('bb', ['four', 'five', 'six']),\n          new Question('ccc', ['four', 'five', 'six'])])\n        ,\n        new Survey(1, 'ma ma', 'Bathroom',\n          [new Question('is this good?', ['four', 'five', 'six'])])\n        ,\n        new Survey(2, 'na na', 'Bedroom',\n          [new Question('What is this?', ['seven', 'eight', 'nine']),\n          new Question('bb', ['four', 'five', 'six']),\n          new Question('ccc', ['four', 'five', 'six'])])\n      ],\n\n      categories: ['Bedroom', 'Bathroom']\n    }\n  }\n\n  updateUser = (userName, firstName, lastName, mail) => {\n    let loggedUserIndex = localStorage.getItem('loggedUserIndex');\n    let tempUsers = this.state.users;\n    tempUsers[loggedUserIndex].user = userName;\n    tempUsers[loggedUserIndex].firstName = firstName;\n    tempUsers[loggedUserIndex].lastName = lastName;\n    tempUsers[loggedUserIndex].mail = mail;\n    this.setState({ users: tempUsers });\n  }\n\n  pushCompletedSurvey = (checkedSurvey, loggedUserIndex, indexSurvey) => {\n    let tempUsers = this.state.users;\n    tempUsers[loggedUserIndex].completedSurveys.push({ indexOfSurvey: indexSurvey, resultSurvey: checkedSurvey, couponRedeemed: false });\n    this.setState({ users: tempUsers });\n  }\n\n  findSurveyIdInCompletedArr = (surveyId) => {\n    let loggedUserIndex = localStorage.getItem('loggedUserIndex');\n    for (let i = 0; i < this.state.users[loggedUserIndex].completedSurveys.length; i++)\n      if (this.state.users[loggedUserIndex].completedSurveys[i].indexOfSurvey === surveyId)\n        return i;\n    return -1;\n  }\n\n  addNewCategory = (newCategory) => {\n    let tempCategories = this.state.categories;\n    tempCategories.push(newCategory);\n    this.setState({ categories: tempCategories });\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n\n          <Switch>\n            <Route exact path={ROUTES.LOGIN} render={(props) => <LoginPage {...props} users={this.state.users} />} />\n            <Route exact path={ROUTES.USER} render={(props) => <UserPage {...props} users={this.state.users} />} />\n            <Route exact path={ROUTES.USER_INFO} render={(props) => <UserInfo {...props} users={this.state.users} updateUser={this.updateUser} />} />\n            <Route exact path={ROUTES.ALLSURVEYS} render={(props) => <AllSurveysPage {...props} users={this.state.users} surveys={this.state.surveys} categories={this.state.categories} findSurveyIdInCompletedArr={this.findSurveyIdInCompletedArr} />} />\n            <Route exact path={ROUTES.SURVEYPAGE} render={(props) => <SurveyPage {...props} users={this.state.users} surveys={this.state.surveys} pushCompletedSurvey={this.pushCompletedSurvey} findSurveyIdInCompletedArr={this.findSurveyIdInCompletedArr} />} />\n            <Route exact path={ROUTES.COUPONPAGE} render={(props) => <CouponPage {...props} users={this.state.users} />} />\n            <Route exact path={ROUTES.ADMIN} render={(props) => <AdminPage {...props} users={this.state.users} />} />\n            <Route exact path={ROUTES.NEW_CATEGORY} render={(props) => <NewCategory addNewCategory={this.addNewCategory} {...props} />} />\n          </Switch>\n\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}